/*----- PROTECTED REGION ID(StanfordDG645ControlStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        StanfordDG645ControlStateMachine.cpp
//
// description : State machine file for the StanfordDG645Control class
//
// project :     StanfordDG645Control
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <StanfordDG645Control.h>

/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::StanfordDG645ControlStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================
//  ON      |  Device is in working order and waiting for commands.
//  FAULT   |  No normal operation possible.


namespace StanfordDG645Control_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_TriggerMode_allowed()
 *	Description : Execution allowed for TriggerMode attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_TriggerMode_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerModeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerModeStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerModeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerModeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_TriggerRate_allowed()
 *	Description : Execution allowed for TriggerRate attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_TriggerRate_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerRateStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerRateStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerRateStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerRateStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_TriggerThreshold_allowed()
 *	Description : Execution allowed for TriggerThreshold attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_TriggerThreshold_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerThresholdStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerThresholdStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerThresholdStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerThresholdStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_TriggerHoldoff_allowed()
 *	Description : Execution allowed for TriggerHoldoff attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_TriggerHoldoff_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerHoldoffStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerHoldoffStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerHoldoffStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerHoldoffStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_TriggerPrescale_allowed()
 *	Description : Execution allowed for TriggerPrescale attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_TriggerPrescale_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerPrescaleStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerPrescaleStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::TriggerPrescaleStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::TriggerPrescaleStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_BurstMode_allowed()
 *	Description : Execution allowed for BurstMode attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_BurstMode_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::BurstModeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::BurstModeStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::BurstModeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::BurstModeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_BurstCount_allowed()
 *	Description : Execution allowed for BurstCount attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_BurstCount_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::BurstCountStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::BurstCountStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::BurstCountStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::BurstCountStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_BurstPeriod_allowed()
 *	Description : Execution allowed for BurstPeriod attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_BurstPeriod_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::BurstPeriodStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::BurstPeriodStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::BurstPeriodStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::BurstPeriodStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_BurstDelay_allowed()
 *	Description : Execution allowed for BurstDelay attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_BurstDelay_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::BurstDelayStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::BurstDelayStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::BurstDelayStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::BurstDelayStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_DeviceSerialNumber_allowed()
 *	Description : Execution allowed for DeviceSerialNumber attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_DeviceSerialNumber_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::DeviceSerialNumberStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::DeviceSerialNumberStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_DeviceFirmwareVersion_allowed()
 *	Description : Execution allowed for DeviceFirmwareVersion attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_DeviceFirmwareVersion_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Control::DeviceFirmwareVersionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::DeviceFirmwareVersionStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_SingleShot_allowed()
 *	Description : Execution allowed for SingleShot attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_SingleShot_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(StanfordDG645Control::SingleShotStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::SingleShotStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_LoadDefaults_allowed()
 *	Description : Execution allowed for LoadDefaults attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_LoadDefaults_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(StanfordDG645Control::LoadDefaultsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::LoadDefaultsStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_LoadSettings_allowed()
 *	Description : Execution allowed for LoadSettings attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_LoadSettings_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(StanfordDG645Control::LoadSettingsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::LoadSettingsStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_SaveSettings_allowed()
 *	Description : Execution allowed for SaveSettings attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_SaveSettings_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(StanfordDG645Control::SaveSettingsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::SaveSettingsStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Control::is_WriteRead_allowed()
 *	Description : Execution allowed for WriteRead attribute
 */
//--------------------------------------------------------
bool StanfordDG645Control::is_WriteRead_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(StanfordDG645Control::WriteReadStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::WriteReadStateAllowed
		return false;
	}
	return true;
}


/*----- PROTECTED REGION ID(StanfordDG645Control::StanfordDG645ControlStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	StanfordDG645Control::StanfordDG645ControlStateAllowed.AdditionalMethods

}	//	End of namespace
