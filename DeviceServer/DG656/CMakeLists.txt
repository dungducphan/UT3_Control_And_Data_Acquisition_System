#=============================================================================
#
# file :        CMakeLists.txt
#
# description : File to generate a TANGO device server using cmake.
#
# project :     StanfordDG645
#
#=============================================================================
#                This file is generated by POGO
#        (Program Obviously used to Generate tango Object)
#=============================================================================
#
#
cmake_minimum_required (VERSION 3.20)
set(CMAKE_SKIP_RPATH TRUE)

# MAKE_ENV is the path to find common environment to build project
#
set(MAKE_ENV /usr/local/tango/share/pogo/preferences)
#
# Project definitions
#
project(StanfordDG645)

#
# optional compiler flags
#
set(CXXFLAGS_USER -g)


#
# Get global information
#
include(${MAKE_ENV}/cmake_tango.opt)

#
# Tango Class list used by project
#

#
# Files for StanfordDG645Control TANGO class
#
set(STANFORDDG645CONTROL  StanfordDG645Control)
set(STANFORDDG645CONTROL_PATH  ./StanfordDG645Control)
set(STANFORDDG645CONTROL_INCLUDE  ./StanfordDG645Control)
set(STANFORDDG645CONTROL_SRC  ${STANFORDDG645CONTROL_PATH}/${STANFORDDG645CONTROL}.cpp ${STANFORDDG645CONTROL_PATH}/${STANFORDDG645CONTROL}Class.cpp ${STANFORDDG645CONTROL_PATH}/${STANFORDDG645CONTROL}StateMachine.cpp)
#
# Files for StanfordDG645Channel TANGO class
#
set(STANFORDDG645CHANNEL  StanfordDG645Channel)
set(STANFORDDG645CHANNEL_PATH  ./StanfordDG645Channel)
set(STANFORDDG645CHANNEL_INCLUDE  ./StanfordDG645Channel)
set(STANFORDDG645CHANNEL_SRC  ${STANFORDDG645CHANNEL_PATH}/${STANFORDDG645CHANNEL}.cpp ${STANFORDDG645CHANNEL_PATH}/${STANFORDDG645CHANNEL}Class.cpp ${STANFORDDG645CHANNEL_PATH}/${STANFORDDG645CHANNEL}StateMachine.cpp ${STANFORDDG645CHANNEL_PATH}/${STANFORDDG645CHANNEL}DynAttrUtils.cpp)

#
# User additional include, link folders/libraries and source files
#
set(USER_INCL_DIR )
set(USER_LIB_DIR )
set(USER_LIBS )
set(USER_SRC_FILES )

#
# Set global info and include directories
#
set(ALL_CLASS_INCLUDE ${STANFORDDG645CONTROL_INCLUDE} ${STANFORDDG645CHANNEL_INCLUDE} )
set(SERVER_SRC ${STANFORDDG645CONTROL_SRC} ${STANFORDDG645CHANNEL_SRC}  ${USER_SRC_FILES} MultiClassesFactory.cpp main.cpp)
include_directories(${ALL_CLASS_INCLUDE}  ${USER_INCL_DIR} ${TANGO_INCLUDES})

#
# Device Server generation
#
set(SERVER_NAME StanfordDG645)
include(${MAKE_ENV}/cmake_common_target.opt)
