/*----- PROTECTED REGION ID(StanfordDG645ChannelStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        StanfordDG645ChannelStateMachine.cpp
//
// description : State machine file for the StanfordDG645Channel class
//
// project :     StanfordDG645Channel
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <StanfordDG645Channel.h>

/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::StanfordDG645ChannelStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================
//  ON      |  Device is in working order and waiting for commands.
//  FAULT   |  No normal operation possible.


namespace StanfordDG645Channel_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Channel::is_OutputAmplitude_allowed()
 *	Description : Execution allowed for OutputAmplitude attribute
 */
//--------------------------------------------------------
bool StanfordDG645Channel::is_OutputAmplitude_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::OutputAmplitudeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::OutputAmplitudeStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::OutputAmplitudeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::OutputAmplitudeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Channel::is_OutputOffset_allowed()
 *	Description : Execution allowed for OutputOffset attribute
 */
//--------------------------------------------------------
bool StanfordDG645Channel::is_OutputOffset_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::OutputOffsetStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::OutputOffsetStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::OutputOffsetStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::OutputOffsetStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Channel::is_OutputWidth_allowed()
 *	Description : Execution allowed for OutputWidth attribute
 */
//--------------------------------------------------------
bool StanfordDG645Channel::is_OutputWidth_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::OutputWidthStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::OutputWidthStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::OutputWidthStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::OutputWidthStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Channel::is_TriggerDelay_allowed()
 *	Description : Execution allowed for TriggerDelay attribute
 */
//--------------------------------------------------------
bool StanfordDG645Channel::is_TriggerDelay_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::TriggerDelayStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::TriggerDelayStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::TriggerDelayStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::TriggerDelayStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Channel::is_TriggerPrescale_allowed()
 *	Description : Execution allowed for TriggerPrescale attribute
 */
//--------------------------------------------------------
bool StanfordDG645Channel::is_TriggerPrescale_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::TriggerPrescaleStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::TriggerPrescaleStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::TriggerPrescaleStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::TriggerPrescaleStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Channel::is_TriggerPhase_allowed()
 *	Description : Execution allowed for TriggerPhase attribute
 */
//--------------------------------------------------------
bool StanfordDG645Channel::is_TriggerPhase_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::TriggerPhaseStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::TriggerPhaseStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::TriggerPhaseStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::TriggerPhaseStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : StanfordDG645Channel::is_BurstMode_allowed()
 *	Description : Execution allowed for BurstMode attribute
 */
//--------------------------------------------------------
bool StanfordDG645Channel::is_BurstMode_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::BurstModeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::BurstModeStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT)
		{
		/*----- PROTECTED REGION ID(StanfordDG645Channel::BurstModeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::BurstModeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================


/*----- PROTECTED REGION ID(StanfordDG645Channel::StanfordDG645ChannelStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	StanfordDG645Channel::StanfordDG645ChannelStateAllowed.AdditionalMethods

}	//	End of namespace
