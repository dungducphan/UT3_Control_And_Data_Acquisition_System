/*----- PROTECTED REGION ID(Newport8742AxisStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        Newport8742AxisStateMachine.cpp
//
// description : C++ source for the «name» and its alowed
//               methods for commands and attributes
//
// project :     .
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL:  $
//
// CVS only:
// $Source:  $
// $Log:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================



#include <Newport8742Axis.h>
#include <Newport8742AxisClass.h>

/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::Newport8742AxisStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================
//  ON      |  idle, ready to move
//  FAULT   |  something went wrong, check status
//  MOVING  |  axis is moving
//  INIT    |  


namespace Newport8742Axis_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_Conversion_allowed()
 *	Description : Execution allowed for Conversion attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_Conversion_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::ConversionStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::ConversionStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::ConversionStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::ConversionStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_Position_allowed()
 *	Description : Execution allowed for Position attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_Position_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::PositionStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::PositionStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::PositionStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::PositionStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_UnitLimitMin_allowed()
 *	Description : Execution allowed for UnitLimitMin attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_UnitLimitMin_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::UnitLimitMinStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::UnitLimitMinStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::UnitLimitMinStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::UnitLimitMinStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_UnitLimitMax_allowed()
 *	Description : Execution allowed for UnitLimitMax attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_UnitLimitMax_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::UnitLimitMaxStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::UnitLimitMaxStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::UnitLimitMaxStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::UnitLimitMaxStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_MotorType_allowed()
 *	Description : Execution allowed for MotorType attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_MotorType_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::MotorTypeStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::MotorTypeStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_Speed_allowed()
 *	Description : Execution allowed for Speed attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_Speed_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::SpeedStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::SpeedStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::SpeedStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::SpeedStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_Acceleration_allowed()
 *	Description : Execution allowed for Acceleration attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_Acceleration_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::AccelerationStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::AccelerationStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::AccelerationStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::AccelerationStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_StoredPosition_allowed()
 *	Description : Execution allowed for StoredPosition attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_StoredPosition_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Check access type.
	if ( type!=Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for WRITE 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::StoredPositionStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::StoredPositionStateAllowed_WRITE
			return false;
		}
		return true;
	}
	else

	//	Check access type.
	if ( type==Tango::READ_REQ )
	{
		//	Compare device state with not allowed states for READ 
		if (get_state()==Tango::FAULT ||
			get_state()==Tango::INIT)
		{
		/*----- PROTECTED REGION ID(Newport8742Axis::StoredPositionStateAllowed_READ) ENABLED START -----*/
		
		/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::StoredPositionStateAllowed_READ
			return false;
		}
		return true;
	}
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_StopMove_allowed()
 *	Description : Execution allowed for StopMove attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_StopMove_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::FAULT ||
		get_state()==Tango::INIT)
	{
	/*----- PROTECTED REGION ID(Newport8742Axis::StopMoveStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::StopMoveStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Newport8742Axis::is_Calibrate_allowed()
 *	Description : Execution allowed for Calibrate attribute
 */
//--------------------------------------------------------
bool Newport8742Axis::is_Calibrate_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::FAULT ||
		get_state()==Tango::INIT)
	{
	/*----- PROTECTED REGION ID(Newport8742Axis::CalibrateStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::CalibrateStateAllowed
		return false;
	}
	return true;
}


/*----- PROTECTED REGION ID(Newport8742Axis::Newport8742AxisStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	Newport8742Axis::Newport8742AxisStateAllowed.AdditionalMethods

}	//	End of namespace
